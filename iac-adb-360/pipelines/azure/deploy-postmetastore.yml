name: PostMetastoreDeploy

trigger:
  branches:
    include: [devy]
  paths:
    include: ['*']

variables:
  - ${{ if or(eq(variables['Build.SourceBranchName'], 'dev'), eq(variables['System.PullRequest.TargetBranchName'], 'dev')) }}:
    - group: vgdevadb360
  - ${{ else }}:
    - group: vgprdadb360

stages:
- stage: s_assignmetastore
  displayName: 'assign workspace to metastore'
  jobs:
  - job: j_assignmetastore
    displayName: 'job assign workspace to metastore'
    pool:
      name: jensazureagentpool
    steps:
    - script: |
        set -euo pipefail
        if command -v databricks >/dev/null 2>&1; then
          echo "Removing existing Databricks CLI at /usr/local/bin/databricks"
          sudo rm -f /usr/local/bin/databricks
        fi
        echo "Installing Databricks CLI..."
        curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sudo sh
        echo "Installed:"
        databricks version  


    - task: AzureCLI@2
      displayName: 'Attach workspace to metastore (account-scoped)'
      inputs:
        azureSubscription: 'ado-sc'
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: './iac-adb-360/helpers/attach-workspace-to-metastore.sh'
        arguments: '$(resourceGroupName) $(tenantId) $(clientId) $(clientSecret) $(metastorename)'
        failOnStandardError: true
      env:
        DATABRICKS_ACCOUNT_ID: $(accountId)
        UC_REGION: westus2
        UC_STORAGE_ROOT: $(ucStorageRoot)   # set in variable group; no <angle-brackets>

- stage: s_assignrepo
  displayName: 'assign repository to spn'
  jobs:
  - job: j_assignrepo
    displayName: 'Job assign repository to spn'
    pool:
      name: jensazureagentpool
    steps:
    - script: |
        set -euo pipefail
        if ! command -v az >/dev/null 2>&1; then
          echo "Azure CLI not found. Installing..."
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        else
          echo "Azure CLI already installed. Skipping."
        fi
        az version | head -n1 || true
      displayName: 'Check & install Azure CLI'

    - script: |
        set -euo pipefail
        if ! command -v databricks >/dev/null 2>&1; then
          echo "Databricks CLI not found. Installing..."
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sudo sh
        else
          echo "Databricks CLI already installed. Skipping."
        fi
        databricks version || true
      displayName: 'Check & install Databricks CLI'

    - task: AzureCLI@2
      displayName: 'Call script to assign workspace to repo'
      inputs:
        azureSubscription: 'ado-sc'
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: './iac-adb-360/helpers/attach-to-repo-github.sh'
        arguments: '$(resourceGroupName) $(tenantId) $(clientId) $(clientSecret) $(repourl) $(ghuser) $(ghpat)'
        failOnStandardError: true
