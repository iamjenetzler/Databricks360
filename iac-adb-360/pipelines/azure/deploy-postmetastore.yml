name: PostMetastoreDeploy

trigger:
  branches:
    include:
      - devy
  paths:
    include:
      - '*'

variables:
  - ${{ if or(eq(variables['Build.SourceBranchName'], 'dev'), eq(variables['System.PullRequest.TargetBranchName'], 'dev')) }}:
    - group: vgdevadb360
  - ${{ else }}:
    - group: vgprdadb360

stages:
- stage: s_assignmetastore
  displayName: 'assign workspace to metastore'
  jobs:
  - job: j_assignmetastore
    displayName: 'job assign workspace to metastore'
    pool:
      name: jensazureagentpool
    steps:
    - task: CmdLine@2
      displayName: 'Check & install Databricks CLI'
      inputs:
        script: |
          set -euo pipefail
          if ! command -v databricks >/dev/null 2>&1; then
            echo "Databricks CLI not found. Installing..."
            curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sudo sh
          else
            echo "Databricks CLI already installed. Skipping installation."
          fi

    - task: AzureCLI@2
      displayName: 'Call script assign workspace to metastore'
      inputs:
        azureSubscription: 'ado-sc'
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: './iac-adb-360/helpers/attach-workspace-to-metastore.sh'
        arguments: '$(resourceGroupName) $(tenantId) $(clientId) $(clientSecret) $(metastorename)'

- stage: s_assignrepo
  displayName: 'assign repository to spn'
  jobs:
  - job: j_assignrepo
    displayName: 'Job assign repository to spn'
    pool:
      name: jensazureagentpool
    steps:
    - task: CmdLine@2
      displayName: 'Check & install Databricks CLI'
      inputs:
        script: |
          set -euo pipefail
          if ! command -v databricks >/dev/null 2>&1; then
            echo "Databricks CLI not found. Installing..."
            curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sudo sh
          else
            echo "Databricks CLI already installed. Skipping installation."
          fi

    - task: AzureCLI@2
      displayName: 'Call script to assign workspace to repo'
      inputs:
        azureSubscription: 'ado-sc'
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: './iac-adb-360/helpers/attach-to-repo-github.sh'
        arguments: '$(resourceGroupName) $(tenantId) $(clientId) $(clientSecret) $(repourl) $(ghuser) $(ghpat)'
